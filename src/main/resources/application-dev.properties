spring.datasource.url=jdbc:mysql://localhost/datsa?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=senha
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create

#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql
spring.devtools.restart.enabled=true

spring.jpa.show-sql=true

spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=10000

spring.flyway.locations=classpath:db/migration,classpath:db/testdata

spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.deserialization.fail-on-ignored-properties=true
spring.jackson.serialization.fail-on-empty-beans=false

spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

# Opcional para troubleshooting:
spring.mail.properties.mail.debug=false

datsa.mail.impl=fake
datsa.mail.sandbox.recipient=edurbs@gmail.com

datsa.storage.local.photo-folder=/tmp/photos

#spring.security.user.name=datsa
#spring.security.user.password=123456

# opaque token config
# spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=http://localhost:8081/oauth/check_token

# # not needed because we permit all clients, but there is a bug and we must specify here
# spring.security.oauth2.resourceserver.opaquetoken.client-id=checktoken
# spring.security.oauth2.resourceserver.opaquetoken.client-secret=web123

#logging.level.org.springframework=DEBUG