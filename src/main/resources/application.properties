#spring.profiles.active=dev

spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}/datsa?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

spring.freemarker.settings.locale=pt_BR

server.compression.enabled=true
# default 2KB
#server.compression.min-response-size=

#spring.security.oauth2.resourceserver.jwt.public-key-location=classpath:keys/datsa-pkey.pem
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/.well-known/jwks.json


# default not to use redis
# spring.session.store-type=none

spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.deserialization.fail-on-ignored-properties=true
spring.jackson.serialization.fail-on-empty-beans=false

spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=10000

springdoc.packages-to-scan=com.github.edurbs.datsa.api
springdoc.paths-to-match=/v1/**

springdoc.swagger-ui.oauth.use-pkce-with-authorization-code-grant=true
#springdoc.swagger-ui.oauth.client-id=datsa-web
#springdoc.swagger-ui.oauth.client-secret=web123
#springdoc.oAuthFlow.authorizationUrl=http://localhost:8080/oauth/authorize
#springdoc.oAuthFlow.tokenUrl=http://localhost:8080/oauth/token
springdoc.swagger-ui.operationsSorter=alpha
springdoc.swagger-ui.tagsSorter=alpha