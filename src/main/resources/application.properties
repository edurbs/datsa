# API Port
spring.profiles.active=dev
server.port=8080
# DB
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=10000
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}/datsa?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
# Freemaker
spring.freemarker.settings.locale=pt_BR
# Compression
server.compression.enabled=true
# default 2KB
#server.compression.min-response-size=
# Security
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://127.0.0.1:8080/oauth2/jwks
datsa.auth.provider-url=http://localhost:8080
spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=http://127.0.0.1:8080/oauth2/introspect
#spring.security.oauth2.resourceserver.opaquetoken.client-id=datsa-backend
#spring.security.oauth2.resourceserver.opaquetoken.client-secret=backend123
# Redis
spring.redis.host=localhost
spring.redis.port=10336
#spring.redis.password=
# Disable Redis repositories auto-configuration
spring.data.redis.repositories.enabled=false
# Exceptions
spring.mvc.throw-exception-if-no-handler-found=true
# Do not expose static resources
spring.web.resources.add-mappings=false
# Jackson
spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.deserialization.fail-on-ignored-properties=true
spring.jackson.serialization.fail-on-empty-beans=false
# Springdoc
springdoc.packages-to-scan=com.github.edurbs.datsa.api
springdoc.paths-to-match=/v1/**
springdoc.swagger-ui.oauth.use-pkce-with-authorization-code-grant=true
springdoc.swagger-ui.oauth.use-basic-authentication-with-access-code-grant=true
springdoc.swagger-ui.operationsSorter=alpha
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.oauth.client-id=datsa-web
springdoc.swagger-ui.oauth.client-secret=web123
springdoc.oAuthFlow.authorizationUrl=http://localhost:8080/oauth2/authorize
springdoc.oAuthFlow.tokenUrl=http://localhost:8080/oauth2/token